/*
Домашнее задание 3. 
№1

Ханойская башня
Задача заключается в следующем. Имеется три стержня — левый, средний и правый. На левом стержне находятся n дисков, диаметры которых различны. Диски упорядочены по размеру диаметра, сверху лежит наименьший, снизу — наибольший. Требуется перенести диски с левого стержня на правый, используя средний стержень как вспомогательный.
Головоломка имеет следующие два правила:
      1. Вы не можете поместить больший диск на меньший диск.
      2. За один раз можно перемещать только один диск.
Реализуйте два подхода для решения.
Итеративно
Рекурсивно

*/


import java.util.Stack;

public class HanoiTower {

    // Итеративное решение
    public static void hanoiIterative(int n, char source, char auxiliary, char target) {
        if (n % 2 == 0) {
            char temp = auxiliary;
            auxiliary = target;
            target = temp;
        }

        int totalMoves = (int) Math.pow(2, n) - 1;

        for (int i = 1; i <= totalMoves; i++) {
            if (i % 3 == 1) {
                moveDiskBetweenPoles(source, target);
            } else if (i % 3 == 2) {
                moveDiskBetweenPoles(source, auxiliary);
            } else if (i % 3 == 0) {
                moveDiskBetweenPoles(auxiliary, target);
            }
        }
    }

    // Рекурсивное решение
    public static void hanoiRecursive(int n, char source, char auxiliary, char target) {
        if (n == 1) {
            System.out.println("Move disk 1 from " + source + " to " + target);
            return;
        }

        hanoiRecursive(n - 1, source, target, auxiliary);
        System.out.println("Move disk " + n + " from " + source + " to " + target);
        hanoiRecursive(n - 1, auxiliary, source, target);
    }

    // Метод для перемещения диска между стержнями
    private static void moveDiskBetweenPoles(char source, char target) {
        System.out.println("Move disk from " + source + " to " + target);
    }

    public static void main(String[] args) {
        int n = 3; // Количество дисков

        System.out.println("Итеративное решение:");
        hanoiIterative(n, 'A', 'B', 'C');

        System.out.println("\nРекурсивное решение:");
        hanoiRecursive(n, 'A', 'B', 'C');
    }
}